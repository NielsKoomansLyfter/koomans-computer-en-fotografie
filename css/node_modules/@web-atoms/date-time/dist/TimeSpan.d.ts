export declare const msMinutes = 60000;
export declare const msSeconds = 1000;
export declare const msHours = 3600000;
export declare const msDays: number;
export default class TimeSpan {
    static fromDays(n: number): TimeSpan;
    static fromHours(n: number): TimeSpan;
    static fromMinutes(n: number): TimeSpan;
    static fromSeconds(n: number): TimeSpan;
    static parse(text: string): TimeSpan;
    private msSinceEpoch;
    get totalSeconds(): number;
    get totalMinutes(): number;
    get totalHours(): number;
    get totalDays(): number;
    get totalMilliseconds(): number;
    get days(): number;
    get hours(): number;
    get minutes(): number;
    get seconds(): number;
    get milliseconds(): number;
    /**
     * Duration is always positive TimeSpan
     */
    get duration(): TimeSpan;
    /**
     * Removes days and only trims given TimeSpan to TimeOfDay
     */
    get trimmedTime(): TimeSpan;
    constructor(ms: number);
    constructor(days: number, hours: number, minutes?: number, seconds?: number, milliseconds?: number);
    /**
     * Format the TimeSpan as time format
     * @param formatAs12 Display time as 12 hours with AM/PM (only if day is zero)
     */
    toString(formatAs12?: boolean): string;
    add(ts: TimeSpan): TimeSpan;
    equals(ts: TimeSpan): boolean;
}
//# sourceMappingURL=TimeSpan.d.ts.map