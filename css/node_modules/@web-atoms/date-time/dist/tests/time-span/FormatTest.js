var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "@web-atoms/unit-test/dist/Assert", "@web-atoms/unit-test/dist/Category", "@web-atoms/unit-test/dist/Test", "@web-atoms/unit-test/dist/TestItem", "../../TimeSpan"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    const Assert_1 = require("@web-atoms/unit-test/dist/Assert");
    const Category_1 = require("@web-atoms/unit-test/dist/Category");
    const Test_1 = require("@web-atoms/unit-test/dist/Test");
    const TestItem_1 = require("@web-atoms/unit-test/dist/TestItem");
    const TimeSpan_1 = require("../../TimeSpan");
    let FormatTest = class FormatTest extends TestItem_1.default {
        hourFormat() {
            const ts = TimeSpan_1.default.parse("1:20");
            Assert_1.default.equals(1, ts.hours);
            Assert_1.default.equals(20, ts.minutes);
            Assert_1.default.equals("01:20 AM", ts.toString(true));
            Assert_1.default.equals("01:20", ts.toString());
        }
        hour12Format() {
            const ts = TimeSpan_1.default.parse("1:20 PM");
            Assert_1.default.equals(13, ts.hours);
            Assert_1.default.equals(20, ts.minutes);
            Assert_1.default.equals("01:20 PM", ts.toString(true));
            Assert_1.default.equals("13:20", ts.toString());
        }
        dayFormat() {
            const ts = TimeSpan_1.default.parse("1:1:20:0");
            Assert_1.default.equals(1, ts.days);
            Assert_1.default.equals(1, ts.hours);
            Assert_1.default.equals(20, ts.minutes);
        }
    };
    __decorate([
        Test_1.default,
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], FormatTest.prototype, "hourFormat", null);
    __decorate([
        Test_1.default,
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], FormatTest.prototype, "hour12Format", null);
    __decorate([
        Test_1.default,
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], FormatTest.prototype, "dayFormat", null);
    FormatTest = __decorate([
        (0, Category_1.default)("TimeSpan Format Test")
    ], FormatTest);
    exports.default = FormatTest;
});
//# sourceMappingURL=FormatTest.js.map