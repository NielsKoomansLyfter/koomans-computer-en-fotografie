var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "@web-atoms/unit-test/dist/Assert", "@web-atoms/unit-test/dist/Test", "@web-atoms/unit-test/dist/TestItem", "../../DateTime"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    const Assert_1 = require("@web-atoms/unit-test/dist/Assert");
    const Test_1 = require("@web-atoms/unit-test/dist/Test");
    const TestItem_1 = require("@web-atoms/unit-test/dist/TestItem");
    const DateTime_1 = require("../../DateTime");
    class BasicTests extends TestItem_1.default {
        create() {
            const d = new DateTime_1.default();
            Assert_1.default.isTrue(d instanceof Date);
        }
        today() {
            const d = DateTime_1.default.today;
            Assert_1.default.isEmpty(d.date.time.milliseconds);
        }
        relativeTime() {
            const d = new DateTime_1.default(2010, 1, 1, 20, 50);
            const dOld = new DateTime_1.default(2010, 1, 1, 20, 50);
        }
        compare() {
            const d1 = new DateTime_1.default(2010, 1, 1, 20, 50);
            const d2 = new DateTime_1.default(2010, 2, 1, 20, 50);
            const dt1 = new Date(d1.msSinceEpoch);
            const dt2 = new Date(d1.msSinceEpoch);
            Assert_1.default.isTrue(d1 < d2);
            Assert_1.default.isFalse(dt1 < dt2);
            Assert_1.default.isTrue(d1.compare(d2) < 0);
        }
    }
    __decorate([
        Test_1.default,
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], BasicTests.prototype, "create", null);
    __decorate([
        Test_1.default,
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], BasicTests.prototype, "today", null);
    __decorate([
        Test_1.default,
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], BasicTests.prototype, "relativeTime", null);
    __decorate([
        Test_1.default,
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], BasicTests.prototype, "compare", null);
    exports.default = BasicTests;
});
//# sourceMappingURL=BasicTests.js.map